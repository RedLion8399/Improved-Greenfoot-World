#BlueJ class context
comment0.target=Rover
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ If\ the\ button\ "act"\ in\ the\ main\ window\ is\ clicked\ this\ method\ is\ executed.\r\n
comment10.params=direction
comment10.target=boolean\ isHill(Direction)
comment10.text=\r\n\ The\ rover\ checks\ if\ there\ is\ a\ "Hill"\ in\ the\ given\ direction.\r\n\ If\ the\ direction\ is\ not\ correct,\ a\ message\ is\ displayed.\r\n\ \r\n\ @param\ direction\ The\ direction\ to\ check\ as\ Enum\ (RIGHT,\ LEFT,\ FOR)\r\n\ \r\n\ @return\ True\ if\ there\ is\ a\ "Hill",\ false\ otherwise\r\n
comment11.params=
comment11.target=void\ takeStone()
comment11.text=\r\n\ The\ rover\ picks\ up\ a\ Stone\ if\ there\ is\ one\ directly\ below\ it.\r\n\ If\ there\ is\ no\ Stone,\ a\ message\ is\ displayed.\r\n
comment12.params=forcePlace
comment12.target=void\ setMarker(boolean)
comment12.text=\r\n\ The\ rover\ places\ a\ "Marker"\ object\ on\ the\ current\ field.\r\n\ If\ there\ is\ already\ one,\ the\ Marker\ is\ not\ placed.\r\n\ \r\n\ @param\ forcePlace\ If\ true,\ the\ Marker\ is\ placed\ even\ if\ there\ is\ already\ one\r\n
comment13.params=
comment13.target=void\ setMarker()
comment13.text=\r\n\ Places\ a\ "Marker"\ object\ on\ the\ current\ field\ if\ there\ isn't\ already\ one.\r\n
comment14.params=
comment14.target=boolean\ isMarker()
comment14.text=\r\n\ The\ rover\ checks\ if\ there\ is\ a\ "Marker"\ object\ on\ the\ current\ field.\r\n\ \r\n\ @return\ True\ if\ there\ is\ a\ "Marker",\ false\ otherwise\r\n
comment15.params=
comment15.target=void\ removeMarker()
comment15.text=\r\n\ The\ rover\ removes\ a\ "Marker"\ object\ from\ the\ current\ field\ if\ there\ is\ one.\r\n
comment16.params=messageText\ priority
comment16.target=void\ message(java.lang.String,\ MessagePriority)
comment17.params=messageText
comment17.target=void\ message(java.lang.String)
comment18.params=
comment18.target=void\ displayAusschalten()
comment19.params=world
comment19.target=void\ addedToWorld(greenfoot.World)
comment2.params=
comment2.target=void\ drive()
comment2.text=\r\n\ The\ rover\ moves\ one\ field\ in\ the\ direction\ it\ is\ currently\ facing.\r\n\ If\ there\ is\ a\ n\ Object\ in\ front\ of\ the\ Rover\ does\ not\ move\ and\ displays\ a\r\n\ message.\r\n
comment3.params=amount
comment3.target=void\ drive(int)
comment3.text=\r\n\ The\ rover\ moves\ a\ given\ amount\ of\ steps\ in\ the\ direction\ it\ is\ currently\r\n\ facing\r\n\r\n\ @param\ amount\ The\ amount\ of\ steps\ to\ move\r\n
comment4.params=amount\ function
comment4.target=void\ drive(int,\ java.lang.Runnable)
comment4.text=\r\n\ The\ rover\ moves\ a\ given\ amount\ of\ steps\ in\ the\ direction\ it\ is\ currently\r\n\ facing.\ After\ each\ step,\ the\ given\ function\ is\ executed.\r\n\ \r\n\ @param\ amount\ \ \ The\ amount\ of\ steps\ to\ move\r\n\ @param\ function\ The\ function\ to\ execute\ after\ each\ step\r\n
comment5.params=condition\ function
comment5.target=void\ drive(java.util.concurrent.Callable,\ java.lang.Runnable)
comment5.text=\r\n\ The\ rover\ moves\ until\ the\ given\ condition\ is\ false.\ After\ each\ step,\ the\r\n\ given\ function\ is\ executed.\r\n\ \r\n\ @param\ condition\ The\ condition\ to\ check\r\n\ @param\ function\ \ The\ function\ to\ execute\ after\ each\ step\r\n
comment6.params=condition
comment6.target=void\ drive(java.util.concurrent.Callable)
comment6.text=\r\n\ The\ rover\ moves\ until\ the\ given\ condition\ is\ false.\r\n\ \r\n\ @param\ condition\ The\ condition\ to\ check\r\n
comment7.params=richtung
comment7.target=void\ turn(Direction)
comment7.text=\r\n\ Thr\ rover\ turns\ 90\ degrees\ in\ the\ given\ direction.\r\n\ \r\n\ @param\ richtung\ The\ direction\ to\ turn\ as\ Enum\ (RIGHT,\ LEFT)\r\n
comment8.params=direction
comment8.target=void\ turn(java.lang.String)
comment8.text=\r\n\ Thr\ rover\ turns\ 90\ degrees\ in\ the\ given\ direction.\r\n\ \r\n\ This\ method\ is\ only\ meant\ to\ be\ executed\ from\ the\ GUI\ directly\ and\ not\ from\r\n\ the\ code\ itself.\ Instead\ use\ the\ method\ with\ the\ Enum\ parameter\ to\ avoid\r\n\ errors.\r\n\ \r\n\ The\ direction\ should\ be\ one\ of\ the\ following\ strings\:\r\n\ "RIGHT",\ "right",\ "rechts",\ "R",\ "r"\r\n\ "LEFT",\ "left",\ "links",\ "L",\ "l"\r\n\ \r\n\ @param\ direction\ The\ direction\ to\ turn\ as\ a\ string\r\n
comment9.params=
comment9.target=boolean\ isStoneBelow()
comment9.text=\r\n\ The\ rover\ checks\ if\ there\ is\ a\ Gestein\ directly\ below\ it.\r\n\ If\ the\ direction\ is\ not\ correct,\ a\ message\ is\ displayed.\r\n\ \r\n\ @return\ True\ if\ there\ is\ a\ `Gestein`,\ false\ otherwise\r\n
numComments=20
